var shortcutsData = [
    {text: '.', hint: 'Any character'},
    {text: '\\w', hint: 'Any word character'},
    {text: '\\W', hint: 'Any character that is not a word'},
    {text: '\\d', hint: 'Any digit character (0-9)'},
    {text: '\\D', hint: 'Any character that is not a digit (0-9)'},
    {text: '\\s', hint: 'Whitespace character'},
    {text: '\\S', hint: 'Not a whitespace'},
    {text: '\\b', hint: 'Word boundary position'},
    {text: '\\B', hint: 'Position not word boundary'},
    {text: '[a-z]', hint: 'Any single character in the range a-z'},
    {text: '[a-zA-Z]', hint: 'In the range a-z or A-Z'},
    {text: '[0-9]', hint: 'Any single character in the range 0-9'},
    {text: '^', hint: 'Beginning of the string'},
    {text: '$', hint: 'End of the string'},
    {text: '*', hint: '0 or more of the preceeding token'},
    {text: '+', hint: '1 or more of the preceeding token'},
    {text: '?', hint: 'Optional preceeding token'},
    {text: '|', hint: 'Alternation'},
    {text: '{', hint: ''},
    {text: '}', hint: ''},
    {text: ',', hint: ''},
    {text: '(', hint: ''},
    {text: ')', hint: ''},
    {text: '(?:', hint: 'Groups multiple tokens together without creating a capturing group'},
    {text: '(?=', hint: 'Positive lookahead'},
    {text: '(?!', hint: 'Negative lookahead'},
    {text: '\\1', hint: ''},
    {text: '\\2', hint: ''},
    {text: '\\3', hint: ''},
    {text: '\\t', hint: 'Tab character'},
    {text: '\\r', hint: 'Carriage return character'},
    {text: '\\n', hint: 'Line break character'},
    {text: '\\', hint: ''},
    {text: '\\/', hint: ''},
    {text: '\\.', hint: ''},
    {text: '\\+', hint: ''},
    {text: '\\*', hint: ''},
    {text: '\\?', hint: ''},
    {text: '\\^', hint: ''},
    {text: '\\$', hint: ''},
    {text: '\\[', hint: ''},
    {text: '\\]', hint: ''},
    {text: '\\(', hint: ''},
    {text: '\\)', hint: ''},
    {text: '\\|', hint: ''},
    {text: '\\{', hint: ''},
    {text: '\\}', hint: ''},
    {text: '\\\'', hint: ''},
    {text: '\\#', hint: ''}
];